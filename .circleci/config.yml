version: 2.1

orbs:
  node: circleci/node@5.0.2

jobs:
  build-deploy-development:
    executor: node/defaulty
    steps:
      - checkout
      - node/install-packages:
        pkg-manger: yarn
      - run:
        command: yarn build
        name: "Build app"
      # - *attach_workspace
      # - run:
      #     name: Swap node versions
      #     command: |
      #       set +e
      #       wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
      #       export NVM_DIR="$HOME/.nvm"
      #       [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      #       [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
      #       nvm install v14
      #       nvm use 14
      #       echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
      #       echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      # - run:
      #     name: deploy
      #     command: |
      #       export NEXT_PUBLIC_NODE_ENV=production
      #       export NEXT_PUBLIC_ENV_NAME=development
      #       export NEXT_PUBLIC_SCHEDULER_URL=$DRS_URL_STAGING
      #       export NEXT_PUBLIC_OUT_OF_HOURS_LINK=$OUT_OF_HOURS_LINK_STAGING
      #       export NEXT_PUBLIC_DRS_SESSION_COOKIE_NAME=$DRS_SESSION_COOKIE_NAME
      #       export NEXT_PUBLIC_STATIC_IMAGES_BUCKET_URL=$PUBLIC_STATIC_IMAGES_BUCKET_URL_DEVELOPMENT
      #       export NEXT_PUBLIC_PROPERTIES_PAGE_SIZE=$NEXT_PUBLIC_PROPERTIES_PAGE_SIZE
      #       export NEXT_PUBLIC_SUPPORT_LINK=$SUPPORT_LINK
      #       export NEXT_PUBLIC_SENTRY_ENVIRONMENT=development
      #       export NEXT_PUBLIC_SENTRY_RELEASE=$CIRCLE_SHA1
      #       export NEXT_PUBLIC_SENTRY_DEBUG=false
      #       export NEXT_PUBLIC_SENTRY_DSN=$SENTRY_DSN
      #       export NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED=$NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED_DEVELOPMENT
      #       export NEXT_PUBLIC_MMH_FRONTEND_URL=$NEXT_PUBLIC_MMH_FRONTEND_URL_DEVELOPMENT
      #       export NEXT_PUBLIC_DAMP_AND_MOULD_FORM_ENABLED=$NEXT_PUBLIC_DAMP_AND_MOULD_FORM_ENABLED_DEVELOPMENT
      #       yarn build && yarn --production=true && sudo npm i -g serverless@"<3" && sls deploy --stage development


  # assume-role-development:
  #   executor: docker-python
  #   steps:
  #     - checkout
  #     - aws_assume_role/assume_role:
  #         account: $AWS_ACCOUNT_DEVELOPMENT
  #         profile_name: default
  #         role: 'LBH_Circle_CI_Deployment_Role'
  #     - persist_to_workspace:
  #         root: *workspace_root
  #         paths:
  #           - .aws

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - build-deploy-development